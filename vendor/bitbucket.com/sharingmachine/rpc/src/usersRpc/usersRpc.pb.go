// Code generated by protoc-gen-go.
// source: usersRpc.proto
// DO NOT EDIT!

/*
Package usersRpc is a generated protocol buffer package.

It is generated from these files:
	usersRpc.proto

It has these top-level messages:
	SignUpRequest
	SignInRequest
	ListRequest
	ListResponse
	User
*/
package usersRpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignUpRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *SignUpRequest) Reset()                    { *m = SignUpRequest{} }
func (m *SignUpRequest) String() string            { return proto.CompactTextString(m) }
func (*SignUpRequest) ProtoMessage()               {}
func (*SignUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SignUpRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SignUpRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignUpRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SignInRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Email    string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Key      string `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
}

func (m *SignInRequest) Reset()                    { *m = SignInRequest{} }
func (m *SignInRequest) String() string            { return proto.CompactTextString(m) }
func (*SignInRequest) ProtoMessage()               {}
func (*SignInRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SignInRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SignInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SignInRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignInRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ListRequest struct {
	Since int64 `protobuf:"varint,1,opt,name=since" json:"since,omitempty"`
	Size  int64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListRequest) GetSince() int64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *ListRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ListResponse struct {
	Items []*User `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Since int64   `protobuf:"varint,3,opt,name=since" json:"since,omitempty"`
	Size  int64   `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListResponse) GetItems() []*User {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetSince() int64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *ListResponse) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type User struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Username    string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email       string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Token       string `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	SnipCount   int64  `protobuf:"varint,5,opt,name=snipCount" json:"snipCount,omitempty"`
	RunCount    int64  `protobuf:"varint,6,opt,name=runCount" json:"runCount,omitempty"`
	Created     int64  `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	ClonedCount int64  `protobuf:"varint,8,opt,name=clonedCount" json:"clonedCount,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *User) GetSnipCount() int64 {
	if m != nil {
		return m.SnipCount
	}
	return 0
}

func (m *User) GetRunCount() int64 {
	if m != nil {
		return m.RunCount
	}
	return 0
}

func (m *User) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *User) GetClonedCount() int64 {
	if m != nil {
		return m.ClonedCount
	}
	return 0
}

func init() {
	proto.RegisterType((*SignUpRequest)(nil), "usersRpc.SignUpRequest")
	proto.RegisterType((*SignInRequest)(nil), "usersRpc.SignInRequest")
	proto.RegisterType((*ListRequest)(nil), "usersRpc.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "usersRpc.ListResponse")
	proto.RegisterType((*User)(nil), "usersRpc.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UsersRpc service

type UsersRpcClient interface {
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*User, error)
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*User, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type usersRpcClient struct {
	cc *grpc.ClientConn
}

func NewUsersRpcClient(cc *grpc.ClientConn) UsersRpcClient {
	return &usersRpcClient{cc}
}

func (c *usersRpcClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/usersRpc.UsersRpc/SignIn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersRpcClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/usersRpc.UsersRpc/SignUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersRpcClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/usersRpc.UsersRpc/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UsersRpc service

type UsersRpcServer interface {
	SignIn(context.Context, *SignInRequest) (*User, error)
	SignUp(context.Context, *SignUpRequest) (*User, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

func RegisterUsersRpcServer(s *grpc.Server, srv UsersRpcServer) {
	s.RegisterService(&_UsersRpc_serviceDesc, srv)
}

func _UsersRpc_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersRpcServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usersRpc.UsersRpc/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersRpcServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersRpc_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersRpcServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usersRpc.UsersRpc/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersRpcServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersRpc_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersRpcServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usersRpc.UsersRpc/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersRpcServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UsersRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usersRpc.UsersRpc",
	HandlerType: (*UsersRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _UsersRpc_SignIn_Handler,
		},
		{
			MethodName: "SignUp",
			Handler:    _UsersRpc_SignUp_Handler,
		},
		{
			MethodName: "List",
			Handler:    _UsersRpc_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usersRpc.proto",
}

func init() { proto.RegisterFile("usersRpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x3d, 0x6f, 0xdb, 0x30,
	0x14, 0xb4, 0xbe, 0xfc, 0xf1, 0xdc, 0x1a, 0x05, 0xe1, 0xb6, 0x84, 0xd1, 0xc1, 0x10, 0x3a, 0x78,
	0xd2, 0x60, 0x0f, 0xde, 0xdd, 0xa9, 0x40, 0x86, 0x40, 0x81, 0xc6, 0x0c, 0x8a, 0xf4, 0x10, 0x10,
	0xb2, 0x49, 0x45, 0xa4, 0x62, 0x24, 0xff, 0x29, 0xff, 0x26, 0x3f, 0x28, 0x10, 0xa9, 0x4f, 0xc3,
	0x01, 0xb2, 0xf1, 0xde, 0xe9, 0xee, 0xa4, 0xe3, 0x13, 0x2c, 0x4a, 0x89, 0x85, 0x0c, 0xf3, 0x24,
	0xc8, 0x0b, 0xa1, 0x04, 0x99, 0x36, 0xd8, 0xbf, 0x87, 0xef, 0x77, 0xec, 0x91, 0x47, 0x79, 0x88,
	0x4f, 0x25, 0x4a, 0x45, 0x56, 0xa0, 0x49, 0x1e, 0x9f, 0x90, 0x5a, 0x6b, 0x6b, 0x33, 0x0b, 0x5b,
	0x4c, 0x96, 0xe0, 0xe1, 0x29, 0x66, 0x47, 0x6a, 0x6b, 0xc2, 0x80, 0x4a, 0x91, 0xc7, 0x52, 0x9e,
	0x45, 0x91, 0x52, 0xc7, 0x28, 0x1a, 0xec, 0x0b, 0x63, 0xff, 0x9f, 0x7f, 0xc5, 0xbe, 0x6f, 0x64,
	0x0f, 0x8d, 0xba, 0x68, 0xa7, 0x1f, 0xfd, 0x03, 0x9c, 0x0c, 0x5f, 0xa8, 0xab, 0x67, 0xd5, 0xd1,
	0xdf, 0xc3, 0xfc, 0x86, 0x49, 0xd5, 0xc4, 0x2d, 0xc1, 0x93, 0x8c, 0x27, 0x26, 0xcb, 0x09, 0x0d,
	0x20, 0x04, 0x5c, 0xc9, 0x5e, 0x51, 0x87, 0x38, 0xa1, 0x3e, 0xfb, 0x0a, 0xbe, 0x19, 0xa1, 0xcc,
	0x05, 0x97, 0x48, 0xfe, 0x82, 0xc7, 0x14, 0x9e, 0x24, 0xb5, 0xd6, 0xce, 0x66, 0xbe, 0x5d, 0x04,
	0x6d, 0x85, 0x91, 0xc4, 0x22, 0x34, 0x64, 0xe5, 0xaf, 0x84, 0x8a, 0x8f, 0xb5, 0x95, 0x01, 0x5d,
	0xaa, 0x73, 0x2d, 0xd5, 0xed, 0xa5, 0xbe, 0x5b, 0xe0, 0x56, 0x7e, 0x64, 0x01, 0x36, 0x4b, 0xeb,
	0x46, 0x6c, 0x96, 0x0e, 0x7a, 0xb2, 0x3f, 0xbb, 0x86, 0x41, 0x17, 0xfa, 0x55, 0x32, 0xe4, 0x75,
	0x1b, 0x06, 0x90, 0x3f, 0x30, 0x93, 0x9c, 0xe5, 0xff, 0x44, 0xc9, 0x15, 0xf5, 0x74, 0x72, 0x37,
	0xa8, 0x52, 0x8a, 0x92, 0x1b, 0x72, 0xac, 0xc9, 0x16, 0x13, 0x0a, 0x93, 0xa4, 0xc0, 0x58, 0x61,
	0x4a, 0x27, 0x9a, 0x6a, 0x20, 0x59, 0xc3, 0x3c, 0x39, 0x0a, 0x8e, 0xa9, 0x11, 0x4e, 0x35, 0xdb,
	0x1f, 0x6d, 0xdf, 0x2c, 0x98, 0x46, 0x75, 0x5f, 0x64, 0x07, 0x63, 0xb3, 0x03, 0xe4, 0x77, 0x57,
	0xe2, 0x60, 0x2b, 0x56, 0x17, 0xed, 0xfa, 0xa3, 0x46, 0x14, 0xe5, 0x97, 0xa2, 0x76, 0x53, 0xaf,
	0x88, 0xf6, 0xe0, 0x56, 0x77, 0x48, 0x7e, 0x76, 0x4c, 0x6f, 0x19, 0x56, 0xbf, 0x2e, 0xc7, 0xe6,
	0xaa, 0xfd, 0xd1, 0xc1, 0x87, 0x25, 0x13, 0x41, 0x76, 0xce, 0x02, 0x89, 0xc5, 0x33, 0x4b, 0xd0,
	0x3c, 0x79, 0x68, 0x3f, 0xe2, 0xd6, 0x7a, 0x18, 0xeb, 0x5f, 0x67, 0xf7, 0x11, 0x00, 0x00, 0xff,
	0xff, 0xae, 0x60, 0x99, 0x19, 0x4c, 0x03, 0x00, 0x00,
}
